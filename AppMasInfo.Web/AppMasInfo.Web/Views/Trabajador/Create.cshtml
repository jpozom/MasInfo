@model AppMasInfo.Web.Models.TrabajadorCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/sha256.js"></script>

@section Scripts {
    <script type="text/javascript">
        $("#IdCargo .rol").hide();

        $("#divStatus").hide();

        $(function () {
            //evento que carga las funciones del cargo en el id asociado a ese combobox
            $("#IdCargoFuncion").on("change", function () {
                var idCargoFuncion = $(this).val();
                $("#IdCargo .rol").hide();

                if (idCargoFuncion != 0) {
                    $("#IdCargo .rol_" + idCargoFuncion).show();
                }
                $("#IdCargo").val(0);
            });
            
        //evento que controla el confirm de la contraseña y encripta la contraseña

            $("#passwordTest").on("change", function () {


                if (userSHA == storedSHA) {
                    $("#status").html("<span class=\"label label-success\">Status:</span> The two passwords are the same. At this point you would be logged into whatever website you were logging into.");
                    $("#PassEncrypted").val(sha256_digest($(this).val()));

                } else {
                    $("#status").html("<span class=\"label label-danger\">Status:</span> The two passwords are <b>not</b> the same. You would be told that your password or username was incorrect.");
                    $("#PassEncrypted").val('');
                }
                 $("#divStatus").show();

                });
            
        });
        
        var storedSHA;
        var userSHA;

        $("#passwordInput").keyup(function () {
            var value = $(this).val();
            $("#storedSHA").text("SHA256 Hash for Password: " + sha256_digest(value));
            storedSHA = value;
        }).keyup();

        $("#passwordTest").keyup(function () {
            var value = $(this).val();
            $("#currentSHA").text("SHA256 Hash for Second Password: " + sha256_digest(value));
            userSHA = value;
        }).keyup();
        
    </script>
}

<style type="text/css">
    .legend {
        font-size: 15px;
        font-weight: 200;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }
</style>
<div class="panel panel-primary">
    <div class="panel-body">
        <h4 class="m-b-30 m-t-0">Mantenedor de Usuarios</h4>

        @using (Html.BeginForm("Create", "Trabajador", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PassEncrypted)
            <fieldset>
                <legend class="legend">Datos Personales del Usuario</legend>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "example@mail.ru" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <legend class="legend">Datos para Inicio de Sesi&oacute;n</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.DatosUsuario.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DatosUsuario.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DatosUsuario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DatosUsuario.Pass, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DatosUsuario.Pass, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Ingrese Password", id = "passwordInput" } })
                        @Html.ValidationMessageFor(model => model.DatosUsuario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPass, "Confirma Pass", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPass, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirme Password", type = "password", id = "passwordTest" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="alert alert-info" id="divStatus">
                    <p id="status"></p>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DatosUsuario.IdRol," Asigne Rol", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DatosUsuario.IdRol,
                                  new SelectList(Model.LstRol, "Id", "Descripcion"),
                                  "Selecciona", new { @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.DatosUsuario, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <legend class="legend">Datos Profesionales del Usuario</legend>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdCargoFuncion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdCargoFuncion,
                                  new SelectList(Model.LstCargoFuncion, "Id", "Descripcion"),
                                  "Selecciona", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdCargoFuncion, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.IdCargo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select id="IdCargo" class="form-control" name="IdCargo">
                            <option value="0" class="">Seleccionar</option>
                            @if (Model.LstCargo.Count() > 0)
                            {
                                foreach (var item in Model.LstCargo)
                                {
                                    <option value="@item.Id" class="rol rol_@item.IdCargoFuncion">@item.Descripcion</option>
                                }
                            }
                        </select>
                    </div>
                </div>

            </fieldset>

            <br />

            <div class="row">
                <div class="form-group col-sm-12">
                    <div class="col-md-12">
                        <input type="submit" value="Guardar" class="btn btn-primary" /> &nbsp;
                        <a href="@Url.Action("Index", "Trabajador")" class="btn btn-default" role="button" aria-pressed="true">Volver</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
